"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var src_exports = {};
__export(src_exports, {
  debounce: () => debounce,
  useDebounce: () => useDebounce,
  useDebounceValue: () => useDebounceValue
});
module.exports = __toCommonJS(src_exports);
var import_react = require("react");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _array_without_holes(arr) {
  if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function _iterable_to_array(iter) {
  if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _non_iterable_spread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _to_consumable_array(arr) {
  return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
function debounce(func, wait, leading) {
  var timeout, isCancelled = !1;
  function debounced() {
    var _this = this;
    isCancelled = !1;
    var args = arguments;
    leading && !timeout && func.apply(this, args), clearTimeout(timeout), timeout = setTimeout(function() {
      timeout = null, leading || isCancelled || func.apply(_this, args), isCancelled = !1;
    }, wait);
  }
  return debounced.cancel = function() {
    isCancelled = !0;
  }, debounced;
}
var defaultOpts = {
  leading: !1
};
function useDebounce(fn, wait) {
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultOpts, mountArgs = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [
    fn
  ], dbEffect = (0, import_react.useRef)(null);
  return (0, import_react.useEffect)(function() {
    return function() {
      var _dbEffect_current;
      (_dbEffect_current = dbEffect.current) === null || _dbEffect_current === void 0 || _dbEffect_current.cancel();
    };
  }, []), (0, import_react.useMemo)(function() {
    return dbEffect.current = debounce(fn, wait, options.leading), dbEffect.current;
  }, [
    options.leading
  ].concat(_to_consumable_array(mountArgs)));
}
function useDebounceValue(val) {
  var amt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, _useState = _sliced_to_array((0, import_react.useState)(val), 2), state = _useState[0], setState = _useState[1];
  return (0, import_react.useEffect)(function() {
    var tm = setTimeout(function() {
      setState(function(prev) {
        return prev === val ? prev : val;
      });
    }, amt);
    return function() {
      clearTimeout(tm);
    };
  }, [
    val
  ]), state;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  debounce,
  useDebounce,
  useDebounceValue
});
//# sourceMappingURL=index.js.map
