import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { isWeb, withStaticProperties } from "@tamagui/core";
import { RadioGroupFrame, RadioGroupIndicatorFrame, RadioGroupItemFrame } from "./RadioGroup";
import { useRadioGroup, useRadioGroupItem, useRadioGroupItemIndicator } from "@tamagui/radio-headless";
import { RovingFocusGroup } from "@tamagui/roving-focus";
import { createContext } from "react";
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
var ensureContext = function(x) {
  x.context || (x.context = RadioGroupContext);
}, RadioGroupContext = /* @__PURE__ */ createContext({}), RadioGroupItemContext = /* @__PURE__ */ createContext({
  checked: !1,
  disabled: !1
});
function createRadioGroup(createProps) {
  var disableActiveTheme = createProps.disableActiveTheme, _createProps_Frame = createProps.Frame, Frame = _createProps_Frame === void 0 ? RadioGroupFrame : _createProps_Frame, _createProps_Indicator = createProps.Indicator, Indicator = _createProps_Indicator === void 0 ? RadioGroupIndicatorFrame : _createProps_Indicator, _createProps_Item = createProps.Item, Item = _createProps_Item === void 0 ? RadioGroupItemFrame : _createProps_Item;
  ensureContext(Frame), ensureContext(Indicator), ensureContext(Item);
  var RadioGroupImp = Frame.styleable(function(props, ref) {
    var value = props.value, defaultValue = props.defaultValue, onValueChange = props.onValueChange, _props_required = props.required, required = _props_required === void 0 ? !1 : _props_required, _props_disabled = props.disabled, disabled = _props_disabled === void 0 ? !1 : _props_disabled, name = props.name, native = props.native, accentColor = props.accentColor, _props_orientation = props.orientation, orientation = _props_orientation === void 0 ? "vertical" : _props_orientation, rest = _object_without_properties(props, [
      "value",
      "defaultValue",
      "onValueChange",
      "required",
      "disabled",
      "name",
      "native",
      "accentColor",
      "orientation"
    ]), _useRadioGroup = useRadioGroup({
      orientation,
      name,
      defaultValue,
      value,
      onValueChange,
      required,
      disabled,
      native,
      accentColor
    }), providerValue = _useRadioGroup.providerValue, frameAttrs = _useRadioGroup.frameAttrs, rovingFocusGroupAttrs = _useRadioGroup.rovingFocusGroupAttrs;
    return /* @__PURE__ */ _jsx(RadioGroupContext.Provider, {
      value: providerValue,
      children: /* @__PURE__ */ _jsx(RovingFocusGroup, _object_spread_props(_object_spread({}, rovingFocusGroupAttrs), {
        children: /* @__PURE__ */ _jsx(RadioGroupFrame, _object_spread(_object_spread_props(_object_spread({}, frameAttrs), {
          ref
        }), rest))
      }))
    });
  }), RadioGroupItemImp = Item.styleable(function(props, ref) {
    var value = props.value, labelledBy = props.labelledBy, onPress = props.onPress, onKeyDown = props.onKeyDown, disabled = props.disabled, id = props.id, rest = _object_without_properties(props, [
      "value",
      "labelledBy",
      "onPress",
      "onKeyDown",
      "disabled",
      "id"
    ]), _useRadioGroupItem = useRadioGroupItem({
      radioGroupContext: RadioGroupContext,
      value,
      id,
      labelledBy,
      disabled,
      onPress,
      onKeyDown
    }), providerValue = _useRadioGroupItem.providerValue, bubbleInput = _useRadioGroupItem.bubbleInput, rovingFocusGroupAttrs = _useRadioGroupItem.rovingFocusGroupAttrs, frameAttrs = _useRadioGroupItem.frameAttrs, isFormControl = _useRadioGroupItem.isFormControl, native = _useRadioGroupItem.native;
    return /* @__PURE__ */ _jsx(RadioGroupItemContext.Provider, {
      value: providerValue,
      children: isWeb && native ? bubbleInput : /* @__PURE__ */ _jsxs(_Fragment, {
        children: [
          /* @__PURE__ */ _jsx(RovingFocusGroup.Item, _object_spread_props(_object_spread({}, rovingFocusGroupAttrs), {
            children: /* @__PURE__ */ _jsx(RadioGroupItemFrame, _object_spread(_object_spread_props(_object_spread({}, frameAttrs), {
              ref
            }), rest))
          })),
          isFormControl && bubbleInput
        ]
      })
    });
  });
  RadioGroupItemImp.displayName = "RadioGroupItem";
  var RadioIndicator = Indicator.styleable(function(props, forwardedRef) {
    var forceMount = props.forceMount, disabled = props.disabled, indicatorProps = _object_without_properties(props, [
      "forceMount",
      "disabled"
    ]), _useRadioGroupItemIndicator = useRadioGroupItemIndicator({
      radioGroupItemContext: RadioGroupItemContext,
      disabled
    }), checked = _useRadioGroupItemIndicator.checked, useIndicatorRest = _object_without_properties(_useRadioGroupItemIndicator, [
      "checked"
    ]);
    return forceMount || checked ? /* @__PURE__ */ _jsx(Indicator, _object_spread(_object_spread_props(_object_spread({}, useIndicatorRest), {
      ref: forwardedRef
    }), indicatorProps)) : null;
  });
  RadioIndicator.displayName = "RadioIndicator";
  var RadioGroup = withStaticProperties(RadioGroupImp, {
    Item: RadioGroupItemImp,
    Indicator: RadioIndicator
  });
  return RadioGroup.displayName = "RadioGroup", RadioGroup;
}
export {
  createRadioGroup
};
//# sourceMappingURL=createRadioGroup.js.map
