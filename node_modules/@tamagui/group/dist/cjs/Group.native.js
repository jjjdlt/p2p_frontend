"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var Group_exports = {};
__export(Group_exports, {
  Group: () => Group,
  GroupFrame: () => GroupFrame,
  XGroup: () => XGroup,
  YGroup: () => YGroup,
  useGroupItem: () => useGroupItem
});
module.exports = __toCommonJS(Group_exports);
var import_jsx_runtime = require("react/jsx-runtime"), import_core = require("@tamagui/core"), import_create_context = require("@tamagui/create-context"), import_helpers = require("@tamagui/helpers"), import_stacks = require("@tamagui/stacks"), import_use_controllable_state = require("@tamagui/use-controllable-state"), import_react = __toESM(require("react")), import_react_native = require("react-native"), import_reforest = require("reforest");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
var GROUP_NAME = "Group", _createContextScope = _sliced_to_array((0, import_create_context.createContextScope)(GROUP_NAME), 2), createGroupContext = _createContextScope[0], createGroupScope = _createContextScope[1], _createGroupContext = _sliced_to_array(createGroupContext(GROUP_NAME), 2), GroupProvider = _createGroupContext[0], useGroupContext = _createGroupContext[1], GroupFrame = (0, import_core.styled)(import_stacks.ThemeableStack, {
  name: "GroupFrame",
  variants: {
    unstyled: {
      false: {
        size: "$true"
      }
    },
    size: function(val, param) {
      var tokens = param.tokens, _tokens_radius_val, _ref, borderRadius = (_ref = (_tokens_radius_val = tokens.radius[val]) !== null && _tokens_radius_val !== void 0 ? _tokens_radius_val : val) !== null && _ref !== void 0 ? _ref : tokens.radius.$true;
      return {
        borderRadius
      };
    }
  },
  defaultVariants: {
    unstyled: process.env.TAMAGUI_HEADLESS === "1"
  }
});
function createGroup(verticalDefault) {
  return (0, import_helpers.withStaticProperties)(GroupFrame.styleable(function(props, ref) {
    var activeProps = (0, import_core.useProps)(props), __scopeGroup = activeProps.__scopeGroup, childrenProp = activeProps.children, space = activeProps.space, _activeProps_size = activeProps.size, size = _activeProps_size === void 0 ? "$true" : _activeProps_size, spaceDirection = activeProps.spaceDirection, separator = activeProps.separator, scrollable = activeProps.scrollable, _activeProps_axis = activeProps.axis, axis = _activeProps_axis === void 0 ? verticalDefault ? "vertical" : "horizontal" : _activeProps_axis, _activeProps_orientation = activeProps.orientation, orientation = _activeProps_orientation === void 0 ? axis : _activeProps_orientation, disabledProp = activeProps.disabled, disablePassBorderRadiusProp = activeProps.disablePassBorderRadius, borderRadius = activeProps.borderRadius, forceUseItem = activeProps.forceUseItem, restProps = _object_without_properties(activeProps, [
      "__scopeGroup",
      "children",
      "space",
      "size",
      "spaceDirection",
      "separator",
      "scrollable",
      "axis",
      "orientation",
      "disabled",
      "disablePassBorderRadius",
      "borderRadius",
      "forceUseItem"
    ]), vertical = orientation === "vertical", _useControllableState = _sliced_to_array((0, import_use_controllable_state.useControllableState)({
      defaultProp: forceUseItem ? 1 : 0
    }), 2), itemChildrenCount = _useControllableState[0], setItemChildrenCount = _useControllableState[1], isUsingItems = itemChildrenCount > 0, radius = borderRadius ?? (size ? (0, import_core.getVariableValue)((0, import_core.getTokens)().radius[size]) - 1 : void 0), hasRadius = radius !== void 0, disablePassBorderRadius = disablePassBorderRadiusProp ?? !hasRadius, childrenArray = import_react.Children.toArray(childrenProp), children = isUsingItems ? import_react.Children.toArray(childrenProp).filter(import_react.isValidElement) : childrenArray.map(function(child, i) {
      if (!/* @__PURE__ */ (0, import_react.isValidElement)(child))
        return child;
      var _child_props_disabled, disabled = (_child_props_disabled = child.props.disabled) !== null && _child_props_disabled !== void 0 ? _child_props_disabled : disabledProp, isFirst = i === 0, isLast = i === childrenArray.length - 1, radiusStyles = disablePassBorderRadius === !0 ? null : getBorderRadius({
        isFirst,
        isLast,
        radius,
        vertical,
        disable: disablePassBorderRadius
      }), _$props = _object_spread({
        disabled
      }, (0, import_core.isTamaguiElement)(child) ? radiusStyles : {
        style: radiusStyles
      });
      return cloneElementWithPropOrder(child, _$props);
    }), indexedChildren = (0, import_reforest.useIndexedChildren)((0, import_core.spacedChildren)({
      direction: spaceDirection,
      separator,
      // @ts-ignore
      space,
      children
    })), onItemMount = import_react.default.useCallback(function() {
      return setItemChildrenCount(function(prev) {
        return prev + 1;
      });
    }, []), onItemUnmount = import_react.default.useCallback(function() {
      return setItemChildrenCount(function(prev) {
        return prev - 1;
      });
    }, []);
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(GroupProvider, {
      disablePassBorderRadius,
      vertical: orientation === "vertical",
      // @ts-ignore this just popped up since new version expo 49
      radius,
      disabled: disabledProp,
      onItemMount,
      onItemUnmount,
      scope: __scopeGroup,
      children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(GroupFrame, _object_spread_props(_object_spread({
        ref,
        size,
        flexDirection: orientation === "horizontal" ? "row" : "column",
        borderRadius
      }, restProps), {
        children: wrapScroll(_object_spread_props(_object_spread({}, activeProps), {
          orientation
        }), indexedChildren)
      }))
    });
  }), {
    Item: GroupItem
  });
}
var GroupItem = /* @__PURE__ */ (0, import_react.forwardRef)(function(props, _ref) {
  var _children_props, __scopeGroup = props.__scopeGroup, children = props.children, forcePlacement = props.forcePlacement, groupItemProps = useGroupItem({
    disabled: /* @__PURE__ */ (0, import_react.isValidElement)(children) ? children.props.disabled : void 0
  }, forcePlacement, __scopeGroup);
  return /* @__PURE__ */ (0, import_react.isValidElement)(children) ? (0, import_core.isTamaguiElement)(children) ? /* @__PURE__ */ import_react.default.cloneElement(children, groupItemProps) : /* @__PURE__ */ import_react.default.cloneElement(children, {
    style: _object_spread({}, (_children_props = children.props) === null || _children_props === void 0 ? void 0 : _children_props.style, groupItemProps)
  }) : children;
}), useGroupItem = function(childrenProps, forcePlacement, __scopeGroup) {
  var treeIndex = (0, import_reforest.useIndex)(), context = useGroupContext("GroupItem", __scopeGroup);
  if (import_react.default.useEffect(function() {
    return context.onItemMount(), function() {
      context.onItemUnmount();
    };
  }, []), !treeIndex)
    throw Error("<Group.Item/> should only be used within a <Group/>");
  var isFirst = forcePlacement === "first" || forcePlacement !== "last" && treeIndex.index === 0, isLast = forcePlacement === "last" || forcePlacement !== "first" && treeIndex.index === treeIndex.maxIndex, _childrenProps_disabled, disabled = (_childrenProps_disabled = childrenProps.disabled) !== null && _childrenProps_disabled !== void 0 ? _childrenProps_disabled : context.disabled, propsToPass = {
    disabled
  };
  if (context.disablePassBorderRadius !== !0) {
    var borderRadius = getBorderRadius({
      radius: context.radius,
      isFirst,
      isLast,
      vertical: context.vertical,
      disable: context.disablePassBorderRadius
    });
    return _object_spread({}, propsToPass, borderRadius);
  }
  return propsToPass;
}, Group = createGroup(!0), YGroup = Group, XGroup = createGroup(!1), wrapScroll = function(param, children) {
  var scrollable = param.scrollable, orientation = param.orientation, _param_showScrollIndicator = param.showScrollIndicator, showScrollIndicator = _param_showScrollIndicator === void 0 ? !1 : _param_showScrollIndicator;
  return scrollable ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_native.ScrollView, _object_spread_props(_object_spread({}, orientation === "vertical" && {
    showsVerticalScrollIndicator: showScrollIndicator
  }, orientation === "horizontal" && {
    horizontal: !0,
    showsHorizontalScrollIndicator: showScrollIndicator
  }), {
    children
  })) : children;
}, getBorderRadius = function(param) {
  var isFirst = param.isFirst, isLast = param.isLast, radius = param.radius, vertical = param.vertical, disable = param.disable;
  return {
    borderTopLeftRadius: isFirst && disable !== "top" && disable !== "start" ? radius : 0,
    borderTopRightRadius: disable !== "top" && disable !== "end" && (vertical && isFirst || !vertical && isLast) ? radius : 0,
    borderBottomLeftRadius: disable !== "bottom" && disable !== "start" && (vertical && isLast || !vertical && isFirst) ? radius : 0,
    borderBottomRightRadius: isLast && disable !== "bottom" && disable !== "end" ? radius : 0
  };
}, cloneElementWithPropOrder = function(child, props) {
  var next = (0, import_core.mergeProps)(child.props, props, (0, import_core.getConfig)().shorthands);
  return /* @__PURE__ */ import_react.default.cloneElement(_object_spread_props(_object_spread({}, child), {
    props: null
  }), next);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Group,
  GroupFrame,
  XGroup,
  YGroup,
  useGroupItem
});
//# sourceMappingURL=Group.js.map
