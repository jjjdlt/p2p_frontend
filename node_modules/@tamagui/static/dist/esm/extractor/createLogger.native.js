import { basename } from "node:path";
import { getPrefixLogs } from "./getPrefixLogs";
function createLogger(sourcePath, options) {
  var _options_logTimings, shouldLogTiming = (_options_logTimings = options.logTimings) !== null && _options_logTimings !== void 0 ? _options_logTimings : !0, start = Date.now(), mem = process.env.TAMAGUI_SHOW_MEMORY_USAGE && shouldLogTiming ? process.memoryUsage() : null;
  return function(res) {
    if (shouldLogTiming) {
      var memUsed = mem ? Math.round((process.memoryUsage().heapUsed - mem.heapUsed) / 1024 / 1204 * 10) / 10 : 0, path = basename(sourcePath || "").replace(/\.[jt]sx?$/, "").slice(0, 22).trim().padStart(24), numOptimized = "".concat(res.optimized + res.styled).padStart(3), numFound = "".concat(res.found + res.styled).padStart(3), numFlattened = "".concat(res.flattened).padStart(3), memory = memUsed ? " ".concat(memUsed, "MB") : "", timing = Date.now() - start, timingStr = "".concat(timing, "ms").padStart(6), pre = getPrefixLogs(options), memStr = memory ? "(".concat(memory, ")") : "";
      console.info("".concat(pre, " ").concat(path, "   \xB7  ").concat(numFound, " found   \xB7  ").concat(numOptimized, " opt   \xB7  ").concat(numFlattened, " flat  ").concat(timingStr, " ").concat(memStr));
    }
  };
}
export {
  createLogger
};
//# sourceMappingURL=createLogger.js.map
