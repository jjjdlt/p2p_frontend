import { generateTamaguiStudioConfig } from "./generateTamaguiStudioConfig";
import { getOptions, esbuildWatchFiles, generateThemesAndLog } from "./loadTamagui";
async function watchTamaguiConfig(tamaguiOptions) {
  const options = await getOptions({ tamaguiOptions });
  if (!options.tamaguiOptions.config)
    throw new Error("No config");
  if (process.env.NODE_ENV === "production")
    return {
      dispose() {
      }
    };
  const disposeConfigWatcher = await esbuildWatchFiles(
    options.tamaguiOptions.config,
    () => {
      generateTamaguiStudioConfig(options.tamaguiOptions, null, !0);
    }
  ), themeBuilderInput = options.tamaguiOptions.themeBuilder?.input;
  let disposeThemesWatcher;
  if (themeBuilderInput) {
    let inputPath = themeBuilderInput;
    try {
      inputPath = require.resolve(themeBuilderInput);
    } catch {
    }
    disposeThemesWatcher = await esbuildWatchFiles(inputPath, () => {
      generateThemesAndLog(options.tamaguiOptions);
    });
  }
  return {
    dispose() {
      disposeConfigWatcher(), disposeThemesWatcher?.();
    }
  };
}
export {
  watchTamaguiConfig
};
//# sourceMappingURL=watchTamaguiConfig.js.map
