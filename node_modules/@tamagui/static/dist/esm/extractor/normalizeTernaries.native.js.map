{
  "version": 3,
  "sources": ["../../../src/extractor/Users/n8/tamagui/packages/static/src/extractor/normalizeTernaries.ts"],
  "mappings": "AAAA,OAAOA,cAAc;AACrB,YAAYC,OAAO;AACnB,OAAOC,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIf,SAASC,mBAAmBC,WAAoB;AAMrD,MALAF,UACEG,MAAMC,QAAQF,SAAAA,GACd,oEAAA,GAGEA,UAAUG,WAAW;AACvB,WAAO,CAAA;AAKT,WAFMC,iBAA6C,CAAC,GAE3CC,MAAM,IAAIC,MAAMN,UAAUG,QAAQ,EAAEE,MAAMC,OAAO;AACxD,QAAyDN,iBAAAA,UAAUK,GAAAA,GAA3DE,OAAiDP,eAAjDO,MAAMC,aAA2CR,eAA3CQ,YAAYC,YAA+BT,eAA/BS,WAAWC,SAAoBV,eAApBU,QAAWC,OAAAA,2BAASX,gBAAAA;MAAjDO;MAAMC;MAAYC;MAAWC;QAEjCE,cAAcL;AAGlB,IAAIV,EAAEgB,sBAAsBN,IAAAA,MAC1BK,cAAeL,KAAaO;AAI9B,QAAIC,aAAa;AACjB,IAAIlB,EAAEmB,kBAAkBT,IAAAA,KAASA,KAAKU,aAAa,OACjDL,cAAcL,KAAKW,UACnBH,aAAa,MACJlB,EAAEsB,mBAAmBZ,IAAAA,MAC1BA,KAAKU,aAAa,SAASV,KAAKU,aAAa,UAC/CL,cAAcf,EAAEuB,iBACdb,KAAKU,SAASI,QAAQ,KAAK,GAAA,GAC3Bd,KAAKe,MACLf,KAAKgB,KAAK,GAEZR,aAAa;AAKjB,QAAMS,MAAM5B,SAASgB,WAAAA,EAAoBa;AAEzC,IAAKrB,eAAeoB,GAAAA,MAClBpB,eAAeoB,GAAAA,IAAO,qBAAA,eAAA,CAAA,GACjBb,IAAAA,GAAAA;MACHF,WAAW,CAAC;MACZD,YAAY,CAAC;MACbD,MAAMK;MACNF;;QAGcK,MAAZW,YAAYX,OAAAA,aAAaP,aAAaC,eAAAA,QAA1BM,SAAAA,SAAAA,OAAwC,CAAC,GACxCA,OAAbY,aAAaZ,QAAAA,aAAaN,YAAYD,gBAAAA,QAAzBO,UAAAA,SAAAA,QAAwC,CAAC;AAC5Da,WAAOC,OAAOzB,eAAeoB,GAAAA,EAAKf,WAAYiB,QAAAA,GAC9CE,OAAOC,OAAOzB,eAAeoB,GAAAA,EAAKhB,YAAamB,SAAAA;EACjD;AAEA,MAAMG,oBAAoBF,OAAOG,KAAK3B,cAAAA,EAAgB4B,IAAI,SAACR,MAAAA;AACzD,WAAOpB,eAAeoB,IAAAA;EACxB,CAAA;AAEA,SAAOM;AACT;",
  "names": ["generate", "t", "invariant", "normalizeTernaries", "ternaries", "Array", "isArray", "length", "ternariesByKey", "idx", "len", "test", "consequent", "alternate", "remove", "rest", "ternaryTest", "isExpressionStatement", "expression", "shouldSwap", "isUnaryExpression", "operator", "argument", "isBinaryExpression", "binaryExpression", "replace", "left", "right", "key", "code", "altStyle", "consStyle", "Object", "assign", "ternaryExpression", "keys", "map"]
}
