var prefix = "           ", logLines = function(str) {
  var singleLine = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
  if (singleLine)
    return prefix + str.split(" ").join(`
`.concat(prefix));
  var lines = [
    ""
  ], items = str.split(" "), _iteratorNormalCompletion = !0, _didIteratorError = !1, _iteratorError = void 0;
  try {
    for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
      var item = _step.value;
      item.length + lines[lines.length - 1].length > 85 && lines.push(""), lines[lines.length - 1] += item + " ";
    }
  } catch (err) {
    _didIteratorError = !0, _iteratorError = err;
  } finally {
    try {
      !_iteratorNormalCompletion && _iterator.return != null && _iterator.return();
    } finally {
      if (_didIteratorError)
        throw _iteratorError;
    }
  }
  return lines.map(function(line, i) {
    return prefix + (i == 0 ? "" : " ") + line.trim();
  }).join(`
`);
};
export {
  logLines
};
//# sourceMappingURL=logLines.js.map
