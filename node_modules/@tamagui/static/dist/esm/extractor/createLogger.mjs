import { basename } from "node:path";
import { getPrefixLogs } from "./getPrefixLogs.mjs";
function createLogger(sourcePath, options) {
  const shouldLogTiming = options.logTimings ?? !0,
    start = Date.now(),
    mem = process.env.TAMAGUI_SHOW_MEMORY_USAGE && shouldLogTiming ? process.memoryUsage() : null;
  return res => {
    if (!shouldLogTiming) return;
    const memUsed = mem ? Math.round((process.memoryUsage().heapUsed - mem.heapUsed) / 1024 / 1204 * 10) / 10 : 0,
      path = basename(sourcePath || "").replace(/\.[jt]sx?$/, "").slice(0, 22).trim().padStart(24),
      numOptimized = `${res.optimized + res.styled}`.padStart(3),
      numFound = `${res.found + res.styled}`.padStart(3),
      numFlattened = `${res.flattened}`.padStart(3),
      memory = memUsed ? ` ${memUsed}MB` : "",
      timingStr = `${Date.now() - start}ms`.padStart(6),
      pre = getPrefixLogs(options),
      memStr = memory ? `(${memory})` : "";
    console.info(`${pre} ${path}   \xB7  ${numFound} found   \xB7  ${numOptimized} opt   \xB7  ${numFlattened} flat  ${timingStr} ${memStr}`);
  };
}
export { createLogger };