"use strict";
function _instanceof(left, right) {
  return right != null && typeof Symbol < "u" && right[Symbol.hasInstance] ? !!right[Symbol.hasInstance](left) : left instanceof right;
}
process.on("message", function(path) {
  if (typeof path != "string")
    throw new Error("Not a string: ".concat(path));
  try {
    var _process_send, _process, out = require(path);
    (_process_send = (_process = process).send) === null || _process_send === void 0 || _process_send.call(_process, JSON.stringify(out));
  } catch (err) {
    if (_instanceof(err, Error)) {
      var _process_send1, _process1;
      (_process_send1 = (_process1 = process).send) === null || _process_send1 === void 0 || _process_send1.call(_process1, "-".concat(err.message, `
`).concat(err.stack));
    } else {
      var _process_send2, _process2;
      (_process_send2 = (_process2 = process).send) === null || _process_send2 === void 0 || _process_send2.call(_process2, "-".concat(err));
    }
  }
});
setInterval(function() {
}, 1e3);
//# sourceMappingURL=loadFile.js.map
