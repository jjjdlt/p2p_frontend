"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var bundle_exports = {};
__export(bundle_exports, {
  bundle: () => bundle,
  esbuildIgnoreFilesRegex: () => esbuildIgnoreFilesRegex,
  esbuildLoaderConfig: () => esbuildLoaderConfig
});
module.exports = __toCommonJS(bundle_exports);
var import_node_path = require("node:path"), import_esbuild = __toESM(require("esbuild")), FS = __toESM(require("fs-extra")), import_esbuildAliasPlugin = require("./esbuildAliasPlugin"), import_loadTamagui = require("./loadTamagui");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_without_holes(arr) {
  if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg), value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
}
function _async_to_generator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array(iter) {
  if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _non_iterable_spread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _to_consumable_array(arr) {
  return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
function _ts_generator(thisArg, body) {
  var f, y, t, g, _ = {
    label: 0,
    sent: function() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  };
  return g = {
    next: verb(0),
    throw: verb(1),
    return: verb(2)
  }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([
        n,
        v
      ]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    for (; _; ) try {
      if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      switch (y = 0, t && (op = [
        op[0] & 2,
        t.value
      ]), op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          return _.label++, {
            value: op[1],
            done: !1
          };
        case 5:
          _.label++, y = op[1], op = [
            0
          ];
          continue;
        case 7:
          op = _.ops.pop(), _.trys.pop();
          continue;
        default:
          if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1], t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2], _.ops.push(op);
            break;
          }
          t[2] && _.ops.pop(), _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [
        6,
        e
      ], y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: !0
    };
  }
}
var esbuildLoaderConfig = {
  ".js": "jsx",
  ".png": "dataurl",
  ".jpg": "dataurl",
  ".jpeg": "dataurl",
  ".svg": "dataurl",
  ".gif": "dataurl",
  ".webp": "dataurl",
  ".woff2": "dataurl",
  ".woff": "dataurl",
  ".eot": "dataurl",
  ".otf": "dataurl",
  ".ttf": "dataurl",
  ".mp4": "file",
  ".mpeg4": "file",
  ".mov": "file",
  ".avif": "file",
  ".wmv": "file",
  ".webm": "file",
  ".wav": "file",
  ".aac": "file",
  ".ogg": "file",
  ".flac": "file"
}, dataExtensions = Object.keys(esbuildLoaderConfig).filter(function(k) {
  return esbuildLoaderConfig[k] === "file" || esbuildLoaderConfig[k] === "dataurl";
}).map(function(k) {
  return k.slice(1);
}), esbuildIgnoreFilesRegex = new RegExp(".(".concat(dataExtensions.join("|"), ")$"), "i");
function getESBuildConfig(_param, platform, aliases) {
  var entryPoints = _param.entryPoints, resolvePlatformSpecificEntries = _param.resolvePlatformSpecificEntries, options = _object_without_properties(_param, [
    "entryPoints",
    "resolvePlatformSpecificEntries"
  ]), _process_env_DEBUG;
  !((_process_env_DEBUG = process.env.DEBUG) === null || _process_env_DEBUG === void 0) && _process_env_DEBUG.startsWith("tamagui") && console.info("Building", entryPoints);
  var resolvedEntryPoints = resolvePlatformSpecificEntries ? entryPoints.map(import_loadTamagui.resolveWebOrNativeSpecificEntry) : entryPoints, res = _object_spread({
    bundle: !0,
    entryPoints: resolvedEntryPoints,
    format: "cjs",
    target: "node16",
    jsx: "transform",
    jsxFactory: "react",
    allowOverwrite: !0,
    keepNames: !0,
    resolveExtensions: _to_consumable_array([
      ".native.tsx",
      ".native.ts",
      ".native.jsx",
      ".native.js"
    ]).concat([
      ".tsx",
      ".ts",
      ".jsx",
      ".js"
    ]),
    platform: "node",
    tsconfigRaw: {
      compilerOptions: {
        jsx: "react-jsx"
      }
    },
    loader: esbuildLoaderConfig,
    logLevel: "warning",
    plugins: [
      {
        name: "external",
        setup: function(build) {
          build.onResolve({
            filter: /@tamagui\/core/
          }, function(args) {
            return {
              path: platform === "native" ? "@tamagui/core/native" : "@tamagui/core",
              external: !0
            };
          }), build.onResolve({
            filter: /react-native\/package.json$/
          }, function(args) {
            return {
              path: "react-native/package.json",
              external: !0
            };
          }), build.onResolve({
            filter: /@tamagui\/web/
          }, function(args) {
            return {
              path: platform === "native" ? "@tamagui/core/native" : "@tamagui/core",
              external: !0
            };
          }), build.onResolve({
            filter: /^(react-native|react-native\/.*)$/
          }, function(args) {
            return {
              path: "react-native-web-lite",
              external: !0
            };
          }), build.onResolve({
            filter: /react-native-reanimated/
          }, function(args) {
            return {
              path: "react-native-reanimated",
              external: !0
            };
          });
        }
      },
      (0, import_esbuildAliasPlugin.esbuildAliasPlugin)(_object_spread({}, aliases))
    ]
  }, options);
  return res;
}
function bundle(props, platform, aliases) {
  return _bundle.apply(this, arguments);
}
function _bundle() {
  return _bundle = _async_to_generator(function(props, platform, aliases) {
    var config;
    return _ts_generator(this, function(_state) {
      switch (_state.label) {
        case 0:
          return [
            4,
            asyncLock(props)
          ];
        case 1:
          return _state.sent(), config = getESBuildConfig(props, platform, aliases), [
            2,
            import_esbuild.default.build(config)
          ];
      }
    });
  }), _bundle.apply(this, arguments);
}
function asyncLock(props) {
  return _asyncLock.apply(this, arguments);
}
function _asyncLock() {
  return _asyncLock = // until i do fancier things w plugins:
  _async_to_generator(function(props) {
    var lockFile, lockStat, lockedMsAgo, _process_env_DEBUG, tries;
    return _ts_generator(this, function(_state) {
      switch (_state.label) {
        case 0:
          return lockFile = (0, import_node_path.join)((0, import_node_path.dirname)(props.outfile), (0, import_node_path.basename)(props.outfile, ".lock")), [
            4,
            FS.stat(lockFile).catch(function() {
            })
          ];
        case 1:
          if (lockStat = _state.sent(), lockedMsAgo = lockStat ? (/* @__PURE__ */ new Date()).getTime() - new Date(lockStat.mtime).getTime() : Number.POSITIVE_INFINITY, !(lockedMsAgo < 500)) return [
            3,
            5
          ];
          !((_process_env_DEBUG = process.env.DEBUG) === null || _process_env_DEBUG === void 0) && _process_env_DEBUG.startsWith("tamagui") && console.info("Waiting for existing build", props.entryPoints), tries = 5, _state.label = 2;
        case 2:
          return tries-- ? [
            4,
            FS.pathExists(props.outfile)
          ] : [
            3,
            5
          ];
        case 3:
          return _state.sent() ? [
            2
          ] : [
            4,
            new Promise(function(res) {
              return setTimeout(res, 50);
            })
          ];
        case 4:
          return _state.sent(), [
            3,
            2
          ];
        case 5:
          return FS.writeFile(lockFile, ""), [
            2
          ];
      }
    });
  }), _asyncLock.apply(this, arguments);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bundle,
  esbuildIgnoreFilesRegex,
  esbuildLoaderConfig
});
//# sourceMappingURL=bundle.js.map
