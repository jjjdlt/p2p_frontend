var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var watchTamaguiConfig_exports = {};
__export(watchTamaguiConfig_exports, {
  watchTamaguiConfig: () => watchTamaguiConfig
});
module.exports = __toCommonJS(watchTamaguiConfig_exports);
var import_generateTamaguiStudioConfig = require("./generateTamaguiStudioConfig"), import_loadTamagui = require("./loadTamagui");
async function watchTamaguiConfig(tamaguiOptions) {
  const options = await (0, import_loadTamagui.getOptions)({ tamaguiOptions });
  if (!options.tamaguiOptions.config)
    throw new Error("No config");
  if (process.env.NODE_ENV === "production")
    return {
      dispose() {
      }
    };
  const disposeConfigWatcher = await (0, import_loadTamagui.esbuildWatchFiles)(
    options.tamaguiOptions.config,
    () => {
      (0, import_generateTamaguiStudioConfig.generateTamaguiStudioConfig)(options.tamaguiOptions, null, !0);
    }
  ), themeBuilderInput = options.tamaguiOptions.themeBuilder?.input;
  let disposeThemesWatcher;
  if (themeBuilderInput) {
    let inputPath = themeBuilderInput;
    try {
      inputPath = require.resolve(themeBuilderInput);
    } catch {
    }
    disposeThemesWatcher = await (0, import_loadTamagui.esbuildWatchFiles)(inputPath, () => {
      (0, import_loadTamagui.generateThemesAndLog)(options.tamaguiOptions);
    });
  }
  return {
    dispose() {
      disposeConfigWatcher(), disposeThemesWatcher?.();
    }
  };
}
//# sourceMappingURL=watchTamaguiConfig.js.map
