"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var generateTamaguiStudioConfig_exports = {};
__export(generateTamaguiStudioConfig_exports, {
  generateTamaguiStudioConfig: () => generateTamaguiStudioConfig,
  generateTamaguiStudioConfigSync: () => generateTamaguiStudioConfigSync,
  generateTamaguiThemes: () => generateTamaguiThemes
});
module.exports = __toCommonJS(generateTamaguiStudioConfig_exports);
var import_node_path = require("node:path"), import_generate_themes = require("@tamagui/generate-themes"), FS = __toESM(require("fs-extra")), import_requireTamaguiCore = require("../helpers/requireTamaguiCore"), import_bundleConfig = require("./bundleConfig");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _array_without_holes(arr) {
  if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg), value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
}
function _async_to_generator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array(iter) {
  if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _non_iterable_spread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _to_consumable_array(arr) {
  return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
function _ts_generator(thisArg, body) {
  var f, y, t, g, _ = {
    label: 0,
    sent: function() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  };
  return g = {
    next: verb(0),
    throw: verb(1),
    return: verb(2)
  }, typeof Symbol == "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([
        n,
        v
      ]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    for (; _; ) try {
      if (f = 1, y && (t = op[0] & 2 ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      switch (y = 0, t && (op = [
        op[0] & 2,
        t.value
      ]), op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          return _.label++, {
            value: op[1],
            done: !1
          };
        case 5:
          _.label++, y = op[1], op = [
            0
          ];
          continue;
        case 7:
          op = _.ops.pop(), _.trys.pop();
          continue;
        default:
          if (t = _.trys, !(t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1], t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2], _.ops.push(op);
            break;
          }
          t[2] && _.ops.pop(), _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [
        6,
        e
      ], y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: !0
    };
  }
}
var tamaguiDir = (0, import_node_path.join)(process.cwd(), ".tamagui"), confFile = (0, import_node_path.join)(tamaguiDir, "tamagui.config.json");
function generateTamaguiStudioConfig(tamaguiOptions, configIn) {
  return _generateTamaguiStudioConfig.apply(this, arguments);
}
function _generateTamaguiStudioConfig() {
  return _generateTamaguiStudioConfig = _async_to_generator(function(tamaguiOptions, configIn) {
    var rebuild, config, _tmp, out, err, _process_env_DEBUG, _arguments = arguments;
    return _ts_generator(this, function(_state) {
      switch (_state.label) {
        case 0:
          rebuild = _arguments.length > 2 && _arguments[2] !== void 0 ? _arguments[2] : !1, _state.label = 1;
        case 1:
          return _state.trys.push([
            1,
            7,
            ,
            8
          ]), configIn == null ? [
            3,
            2
          ] : (_tmp = configIn, [
            3,
            4
          ]);
        case 2:
          return [
            4,
            (0, import_bundleConfig.getBundledConfig)(tamaguiOptions, rebuild)
          ];
        case 3:
          _tmp = _state.sent(), _state.label = 4;
        case 4:
          return config = _tmp, config ? (out = transformConfig(config, tamaguiOptions.platform || "web"), [
            4,
            FS.ensureDir((0, import_node_path.dirname)(confFile))
          ]) : [
            2
          ];
        case 5:
          return _state.sent(), [
            4,
            FS.writeJSON(confFile, out, {
              spaces: 2
            })
          ];
        case 6:
          return _state.sent(), [
            3,
            8
          ];
        case 7:
          return err = _state.sent(), (!((_process_env_DEBUG = process.env.DEBUG) === null || _process_env_DEBUG === void 0) && _process_env_DEBUG.includes("tamagui") || process.env.IS_TAMAGUI_DEV) && console.warn("generateTamaguiStudioConfig error", err), [
            3,
            8
          ];
        case 8:
          return [
            2
          ];
      }
    });
  }), _generateTamaguiStudioConfig.apply(this, arguments);
}
function generateTamaguiStudioConfigSync(_tamaguiOptions, config) {
  try {
    FS.ensureDirSync((0, import_node_path.dirname)(confFile)), FS.writeJSONSync(confFile, transformConfig(config, _tamaguiOptions.platform || "web"), {
      spaces: 2
    });
  } catch (err) {
    var _process_env_DEBUG;
    (!((_process_env_DEBUG = process.env.DEBUG) === null || _process_env_DEBUG === void 0) && _process_env_DEBUG.includes("tamagui") || process.env.IS_TAMAGUI_DEV) && console.warn("generateTamaguiStudioConfig error", err);
  }
}
function generateTamaguiThemes(tamaguiOptions) {
  return _generateTamaguiThemes.apply(this, arguments);
}
function _generateTamaguiThemes() {
  return _generateTamaguiThemes = _async_to_generator(function(tamaguiOptions) {
    var force, _tamaguiOptions_themeBuilder, input, output, inPath, outPath, generatedOutput, hasChanged, _tmp, _arguments = arguments;
    return _ts_generator(this, function(_state) {
      switch (_state.label) {
        case 0:
          return force = _arguments.length > 1 && _arguments[1] !== void 0 ? _arguments[1] : !1, tamaguiOptions.themeBuilder ? (_tamaguiOptions_themeBuilder = tamaguiOptions.themeBuilder, input = _tamaguiOptions_themeBuilder.input, output = _tamaguiOptions_themeBuilder.output, inPath = resolveRelativePath(input), outPath = resolveRelativePath(output), [
            4,
            (0, import_generate_themes.generateThemes)(inPath)
          ]) : [
            2
          ];
        case 1:
          return generatedOutput = _state.sent(), _tmp = force, _tmp ? [
            3,
            3
          ] : [
            4,
            _async_to_generator(function() {
              var themeBuilderJsonExists, next, current, err;
              return _ts_generator(this, function(_state2) {
                switch (_state2.label) {
                  case 0:
                    return _state2.trys.push([
                      0,
                      3,
                      ,
                      4
                    ]), [
                      4,
                      FS.pathExists((0, import_node_path.join)(tamaguiDir, "theme-builder.json"))
                    ];
                  case 1:
                    return themeBuilderJsonExists = _state2.sent(), themeBuilderJsonExists ? generatedOutput ? (next = generatedOutput.generated, [
                      4,
                      FS.readFile(outPath, "utf-8")
                    ]) : [
                      2,
                      !1
                    ] : [
                      2,
                      !0
                    ];
                  case 2:
                    return current = _state2.sent(), [
                      2,
                      next !== current
                    ];
                  case 3:
                    return err = _state2.sent(), [
                      3,
                      4
                    ];
                  case 4:
                    return [
                      2,
                      !0
                    ];
                }
              });
            })()
          ];
        case 2:
          _tmp = _state.sent(), _state.label = 3;
        case 3:
          return hasChanged = _tmp, hasChanged ? [
            4,
            (0, import_generate_themes.writeGeneratedThemes)(tamaguiDir, outPath, generatedOutput)
          ] : [
            3,
            5
          ];
        case 4:
          _state.sent(), _state.label = 5;
        case 5:
          return [
            2,
            hasChanged
          ];
      }
    });
  }), _generateTamaguiThemes.apply(this, arguments);
}
var resolveRelativePath = function(inputPath) {
  return inputPath.startsWith(".") ? (0, import_node_path.join)(process.cwd(), inputPath) : require.resolve(inputPath);
};
function cloneDeepSafe(x) {
  var excludeKeys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return x && (Array.isArray(x) ? x.map(function(_) {
    return cloneDeepSafe(_);
  }) : typeof x == "function" ? "Function" : typeof x != "object" ? x : "$$typeof" in x ? "Component" : Object.fromEntries(Object.entries(x).flatMap(function(param) {
    var _param = _sliced_to_array(param, 2), k = _param[0], v = _param[1];
    return excludeKeys[k] ? [] : [
      [
        k,
        cloneDeepSafe(v)
      ]
    ];
  })));
}
function transformConfig(config, platform) {
  if (!config)
    return null;
  var getVariableValue = (0, import_requireTamaguiCore.requireTamaguiCore)(platform).getVariableValue, next = cloneDeepSafe(config, {
    validStyles: !0
  }), components = next.components, nameToPaths = next.nameToPaths, tamaguiConfig = next.tamaguiConfig, themes = tamaguiConfig.themes, tokens = tamaguiConfig.tokens;
  for (var key in themes) {
    var theme = themes[key];
    theme.id = key;
    for (var tkey in theme)
      theme[tkey] = getVariableValue(theme[tkey]);
  }
  for (var key1 in tokens) {
    var token = _object_spread({}, tokens[key1]);
    for (var tkey1 in token)
      token[tkey1] = getVariableValue(token[tkey1]);
  }
  var _iteratorNormalCompletion = !0, _didIteratorError = !1, _iteratorError = void 0;
  try {
    for (var _iterator = components[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
      var _ref = _step.value, component = _ref;
      for (var _ref1 in component.nameToInfo) {
        var _ = _ref1, compDefinition = _object_spread({}, component.nameToInfo[_]);
        component.nameToInfo[_] = compDefinition;
        var _compDefinition_staticConfig = compDefinition.staticConfig, parentStaticConfig = _compDefinition_staticConfig.parentStaticConfig, rest = _object_without_properties(_compDefinition_staticConfig, [
          "parentStaticConfig"
        ]);
        compDefinition.staticConfig = rest;
      }
    }
  } catch (err) {
    _didIteratorError = !0, _iteratorError = err;
  } finally {
    try {
      !_iteratorNormalCompletion && _iterator.return != null && _iterator.return();
    } finally {
      if (_didIteratorError)
        throw _iteratorError;
    }
  }
  next.nameToPaths = {};
  for (var key2 in nameToPaths)
    next.nameToPaths[key2] = _to_consumable_array(nameToPaths[key2]);
  var _next_tamaguiConfig = next.tamaguiConfig, fontsParsed = _next_tamaguiConfig.fontsParsed, getCSS = _next_tamaguiConfig.getCSS, tokensParsed = _next_tamaguiConfig.tokensParsed, themeConfig = _next_tamaguiConfig.themeConfig, cleanedConfig = _object_without_properties(_next_tamaguiConfig, [
    "fontsParsed",
    "getCSS",
    "tokensParsed",
    "themeConfig"
  ]);
  return {
    components,
    nameToPaths,
    tamaguiConfig: cleanedConfig
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  generateTamaguiStudioConfig,
  generateTamaguiStudioConfigSync,
  generateTamaguiThemes
});
//# sourceMappingURL=generateTamaguiStudioConfig.js.map
