import { Dimensions } from "react-native";
import { matchQuery } from "./matchQuery";
function _class_call_check(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _create_class(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
var NativeMediaQueryList = /* @__PURE__ */ function() {
  "use strict";
  function NativeMediaQueryList2(query) {
    var _this = this;
    _class_call_check(this, NativeMediaQueryList2), _define_property(this, "query", void 0), _define_property(this, "listeners", void 0), this.query = query, this.listeners = [], this.notify(), Dimensions.addEventListener("change", function() {
      _this.notify();
    });
  }
  return _create_class(NativeMediaQueryList2, [
    {
      key: "orientation",
      get: function() {
        var windowDimensions = Dimensions.get("window");
        return windowDimensions.height > windowDimensions.width ? "portrait" : "landscape";
      }
    },
    {
      key: "notify",
      value: function() {
        var _this = this;
        this.listeners.forEach(function(listener) {
          listener(_this.orientation);
        });
      }
    },
    {
      key: "addListener",
      value: function(listener) {
        this.listeners.push(listener);
      }
    },
    {
      key: "removeListener",
      value: function(listener) {
        var index = this.listeners.indexOf(listener);
        index !== -1 && this.listeners.splice(index, 1);
      }
    },
    {
      key: "match",
      value: function(query, param) {
        var width = param.width, height = param.height;
        return matchQuery(query, {
          type: "screen",
          orientation: height > width ? "portrait" : "landscape",
          "device-width": width,
          "device-height": height
        });
      }
    },
    {
      key: "matches",
      get: function() {
        var windowDimensions = Dimensions.get("window"), matches = matchQuery(this.query, _object_spread_props(_object_spread({
          type: "screen",
          orientation: this.orientation
        }, windowDimensions), {
          "device-width": windowDimensions.width,
          "device-height": windowDimensions.height
        }));
        return matches;
      }
    }
  ]), NativeMediaQueryList2;
}();
export {
  NativeMediaQueryList
};
//# sourceMappingURL=mediaQueryList.js.map
