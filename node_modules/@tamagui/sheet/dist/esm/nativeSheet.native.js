import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { YStack } from "@tamagui/stacks";
import { useEffect, useRef } from "react";
import { View } from "react-native";
import { SheetProvider } from "./SheetContext";
import { useSheetOpenState } from "./useSheetOpenState";
import { useSheetProviderProps } from "./useSheetProviderProps";
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
var nativeSheets = {
  ios: null
};
function getNativeSheet(platform) {
  return nativeSheets[platform];
}
function setupNativeSheet(platform, Implementation) {
  platform === "ios" && (nativeSheets[platform] = function(props) {
    var state = useSheetOpenState(props), providerProps = useSheetProviderProps(props, state), open = state.open, setOpen = state.setOpen, ref = useRef();
    return useEffect(function() {
      var _ref_current;
      (_ref_current = ref.current) === null || _ref_current === void 0 || _ref_current.setVisibility(open);
    }, [
      open
    ]), /* @__PURE__ */ _jsx(_Fragment, {
      children: /* @__PURE__ */ _jsxs(SheetProvider, _object_spread_props(_object_spread({}, providerProps), {
        onlyShowFrame: !0,
        children: [
          /* @__PURE__ */ _jsx(Implementation, {
            ref,
            onModalDismiss: function() {
              return setOpen(!1);
            },
            children: /* @__PURE__ */ _jsx(View, {
              style: {
                flex: 1
              },
              children: props.children
            })
          }),
          /* for some reason select triggers wont show on native if this isn't inside the actual tree not inside implementation... */
          /* so just hiding it here for now... not great... */
          /* @__PURE__ */ _jsx(YStack, {
            position: "absolute",
            opacity: 0,
            pointerEvents: "none",
            width: 0,
            height: 0,
            children: props.children
          })
        ]
      }))
    });
  });
}
export {
  getNativeSheet,
  setupNativeSheet
};
//# sourceMappingURL=nativeSheet.js.map
