import { jsx as _jsx } from "react/jsx-runtime";
import { isWeb } from "@tamagui/constants";
import { getVariableValue, styled } from "@tamagui/core";
import { getSize } from "@tamagui/get-token";
import { composeEventHandlers } from "@tamagui/helpers";
import { YStack } from "@tamagui/stacks";
import * as React from "react";
import { ARROW_KEYS, PAGE_KEYS, SLIDER_NAME, useSliderContext } from "./constants";
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _instanceof(left, right) {
  return right != null && typeof Symbol < "u" && right[Symbol.hasInstance] ? !!right[Symbol.hasInstance](left) : left instanceof right;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
var SliderFrame = styled(YStack, {
  position: "relative",
  variants: {
    orientation: {
      horizontal: {},
      vertical: {}
    },
    size: function(val, extras) {
      if (val) {
        var orientation = extras.props.orientation, size = Math.round(getVariableValue(getSize(val)) / 6);
        return orientation === "horizontal" ? {
          height: size,
          borderRadius: size,
          justifyContent: "center"
        } : {
          width: size,
          borderRadius: size,
          alignItems: "center"
        };
      }
    }
  }
}), SliderImpl = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var __scopeSlider = props.__scopeSlider, onSlideStart = props.onSlideStart, onSlideMove = props.onSlideMove, onSlideEnd = props.onSlideEnd, onHomeKeyDown = props.onHomeKeyDown, onEndKeyDown = props.onEndKeyDown, onStepKeyDown = props.onStepKeyDown, sliderProps = _object_without_properties(props, [
    "__scopeSlider",
    "onSlideStart",
    "onSlideMove",
    "onSlideEnd",
    "onHomeKeyDown",
    "onEndKeyDown",
    "onStepKeyDown"
  ]), context = useSliderContext(SLIDER_NAME, __scopeSlider);
  return /* @__PURE__ */ _jsx(SliderFrame, _object_spread_props(_object_spread(_object_spread_props(_object_spread({
    size: "$4"
  }, sliderProps), {
    "data-orientation": sliderProps.orientation,
    ref: forwardedRef
  }), isWeb && {
    onKeyDown: function(event) {
      event.key === "Home" ? (onHomeKeyDown(event), event.preventDefault()) : event.key === "End" ? (onEndKeyDown(event), event.preventDefault()) : PAGE_KEYS.concat(ARROW_KEYS).includes(event.key) && (onStepKeyDown(event), event.preventDefault());
    }
  }), {
    onMoveShouldSetResponderCapture: function() {
      return !0;
    },
    onScrollShouldSetResponder: function() {
      return !0;
    },
    onScrollShouldSetResponderCapture: function() {
      return !0;
    },
    onMoveShouldSetResponder: function() {
      return !0;
    },
    onStartShouldSetResponder: function() {
      return !0;
    },
    // onStartShouldSetResponderCapture={() => true}
    onResponderTerminationRequest: function() {
      return !1;
    },
    onResponderGrant: composeEventHandlers(props.onResponderGrant, function(event) {
      var target = event.target, thumbIndex = context.thumbs.get(target), isStartingOnThumb = thumbIndex !== void 0;
      isWeb && _instanceof(target, HTMLElement) && context.thumbs.has(target) && target.focus(), !isWeb && isStartingOnThumb && (context.valueIndexToChangeRef.current = thumbIndex), onSlideStart(event, isStartingOnThumb ? "thumb" : "track");
    }),
    onResponderMove: composeEventHandlers(props.onResponderMove, function(event) {
      event.stopPropagation(), onSlideMove(event);
    }),
    onResponderRelease: composeEventHandlers(props.onResponderRelease, function(event) {
      onSlideEnd(event);
    })
  }));
});
export {
  SliderFrame,
  SliderImpl
};
//# sourceMappingURL=SliderImpl.js.map
