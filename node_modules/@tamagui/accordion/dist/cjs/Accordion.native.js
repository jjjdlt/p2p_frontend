"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var Accordion_exports = {};
__export(Accordion_exports, {
  Accordion: () => Accordion
});
module.exports = __toCommonJS(Accordion_exports);
var import_jsx_runtime = require("react/jsx-runtime"), import_collapsible = require("@tamagui/collapsible"), import_collection = require("@tamagui/collection"), import_compose_refs = require("@tamagui/compose-refs"), import_constants = require("@tamagui/constants"), import_helpers = require("@tamagui/helpers"), import_stacks = require("@tamagui/stacks"), import_text = require("@tamagui/text"), import_use_controllable_state = require("@tamagui/use-controllable-state"), import_use_direction = require("@tamagui/use-direction"), import_web = require("@tamagui/web"), import_web2 = require("@tamagui/web"), React = __toESM(require("react"));
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _array_without_holes(arr) {
  if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array(iter) {
  if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _non_iterable_spread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _to_consumable_array(arr) {
  return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
var ACCORDION_NAME = "Accordion", ACCORDION_KEYS = [
  "Home",
  "End",
  "ArrowDown",
  "ArrowUp",
  "ArrowLeft",
  "ArrowRight"
], _createCollection = _sliced_to_array((0, import_collection.createCollection)(ACCORDION_NAME), 2), Collection = _createCollection[0], useCollection = _createCollection[1], ACCORDION_CONTEXT = "Accordion", AccordionComponent = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var type2 = props.type, accordionProps = _object_without_properties(props, [
    "type"
  ]), singleProps = accordionProps, multipleProps = accordionProps;
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Collection.Provider, {
    __scopeCollection: props.__scopeAccordion || ACCORDION_CONTEXT,
    children: type2 === "multiple" ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionImplMultiple, _object_spread_props(_object_spread({}, multipleProps), {
      ref: forwardedRef
    })) : /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionImplSingle, _object_spread_props(_object_spread({}, singleProps), {
      ref: forwardedRef
    }))
  });
});
AccordionComponent.displayName = ACCORDION_NAME;
AccordionComponent.propTypes = {
  type: function(props) {
    var value = props.value || props.defaultValue;
    return props.type && ![
      "single",
      "multiple"
    ].includes(props.type) ? new Error("Invalid prop `type` supplied to `Accordion`. Expected one of `single | multiple`.") : props.type === "multiple" && typeof value == "string" ? new Error("Invalid prop `type` supplied to `Accordion`. Expected `single` when `defaultValue` or `value` is type `string`.") : props.type === "single" && Array.isArray(value) ? new Error("Invalid prop `type` supplied to `Accordion`. Expected `multiple` when `defaultValue` or `value` is type `string[]`.") : null;
  }
};
var _createStyledContext = (0, import_web2.createStyledContext)(), AccordionValueProvider = _createStyledContext.Provider, useAccordionValueContext = _createStyledContext.useStyledContext, _createStyledContext1 = (0, import_web2.createStyledContext)(), AccordionCollapsibleProvider = _createStyledContext1.Provider, useAccordionCollapsibleContext = _createStyledContext1.useStyledContext, AccordionImplSingle = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var valueProp = props.value, defaultValue = props.defaultValue, control = props.control, _props_onValueChange = props.onValueChange, onValueChange = _props_onValueChange === void 0 ? function() {
  } : _props_onValueChange, _props_collapsible = props.collapsible, collapsible = _props_collapsible === void 0 ? !1 : _props_collapsible, accordionSingleProps = _object_without_properties(props, [
    "value",
    "defaultValue",
    "control",
    "onValueChange",
    "collapsible"
  ]), _useControllableState = _sliced_to_array((0, import_use_controllable_state.useControllableState)({
    prop: valueProp,
    defaultProp: defaultValue || "",
    onChange: onValueChange
  }), 2), value = _useControllableState[0], setValue = _useControllableState[1];
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionValueProvider, {
    scope: props.__scopeAccordion,
    value: value ? [
      value
    ] : [],
    onItemOpen: setValue,
    onItemClose: React.useCallback(function() {
      return collapsible && setValue("");
    }, [
      setValue,
      collapsible
    ]),
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionCollapsibleProvider, {
      scope: props.__scopeAccordion,
      collapsible,
      children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionImpl, _object_spread_props(_object_spread({}, accordionSingleProps), {
        ref: forwardedRef
      }))
    })
  });
}), AccordionImplMultiple = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var valueProp = props.value, defaultValue = props.defaultValue, _props_onValueChange = props.onValueChange, onValueChange = _props_onValueChange === void 0 ? function() {
  } : _props_onValueChange, accordionMultipleProps = _object_without_properties(props, [
    "value",
    "defaultValue",
    "onValueChange"
  ]), _useControllableState = _sliced_to_array((0, import_use_controllable_state.useControllableState)({
    prop: valueProp,
    defaultProp: defaultValue || [],
    onChange: onValueChange
  }), 2), value = _useControllableState[0], setValue = _useControllableState[1], handleItemOpen = React.useCallback(function(itemValue) {
    return setValue(function() {
      var prevValue = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      return _to_consumable_array(prevValue).concat([
        itemValue
      ]);
    });
  }, [
    setValue
  ]), handleItemClose = React.useCallback(function(itemValue) {
    return setValue(function() {
      var prevValue = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      return prevValue.filter(function(value2) {
        return value2 !== itemValue;
      });
    });
  }, [
    setValue
  ]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionValueProvider, {
    scope: props.__scopeAccordion,
    value: value || [],
    onItemOpen: handleItemOpen,
    onItemClose: handleItemClose,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionCollapsibleProvider, {
      scope: props.__scopeAccordion,
      collapsible: !0,
      children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionImpl, _object_spread_props(_object_spread({}, accordionMultipleProps), {
        ref: forwardedRef
      }))
    })
  });
}), _createStyledContext2 = (0, import_web2.createStyledContext)(), AccordionImplProvider = _createStyledContext2.Provider, useAccordionContext = _createStyledContext2.useStyledContext, AccordionImpl = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var __scopeAccordion = props.__scopeAccordion, disabled = props.disabled, dir = props.dir, _props_orientation = props.orientation, orientation = _props_orientation === void 0 ? "vertical" : _props_orientation, accordionProps = _object_without_properties(props, [
    "__scopeAccordion",
    "disabled",
    "dir",
    "orientation"
  ]), accordionRef = React.useRef(null), composedRef = (0, import_compose_refs.useComposedRefs)(accordionRef, forwardedRef), getItems = useCollection(__scopeAccordion || ACCORDION_CONTEXT), direction = (0, import_use_direction.useDirection)(dir), isDirectionLTR = direction === "ltr", handleKeyDown = (0, import_helpers.composeEventHandlers)(props.onKeyDown, function(event) {
    var _triggerCollection_clampedIndex_ref_current;
    if (ACCORDION_KEYS.includes(event.key)) {
      var target = event.target, triggerCollection = getItems().filter(function(item) {
        var el = item.ref.current;
        return !(el != null && el.disabled);
      }), triggerIndex = triggerCollection.findIndex(function(item) {
        return item.ref.current === target;
      }), triggerCount = triggerCollection.length;
      if (triggerIndex !== -1) {
        event.preventDefault();
        var nextIndex = triggerIndex, homeIndex = 0, endIndex = triggerCount - 1, moveNext = function() {
          nextIndex = triggerIndex + 1, nextIndex > endIndex && (nextIndex = homeIndex);
        }, movePrev = function() {
          nextIndex = triggerIndex - 1, nextIndex < homeIndex && (nextIndex = endIndex);
        };
        switch (event.key) {
          case "Home":
            nextIndex = homeIndex;
            break;
          case "End":
            nextIndex = endIndex;
            break;
          case "ArrowRight":
            orientation === "horizontal" && (isDirectionLTR ? moveNext() : movePrev());
            break;
          case "ArrowDown":
            orientation === "vertical" && moveNext();
            break;
          case "ArrowLeft":
            orientation === "horizontal" && (isDirectionLTR ? movePrev() : moveNext());
            break;
          case "ArrowUp":
            orientation === "vertical" && movePrev();
            break;
        }
        var clampedIndex = nextIndex % triggerCount;
        (_triggerCollection_clampedIndex_ref_current = triggerCollection[clampedIndex].ref.current) === null || _triggerCollection_clampedIndex_ref_current === void 0 || _triggerCollection_clampedIndex_ref_current.focus();
      }
    }
  });
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionImplProvider, {
    scope: __scopeAccordion,
    disabled,
    direction: dir,
    orientation,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Collection.Slot, {
      __scopeCollection: __scopeAccordion || ACCORDION_CONTEXT,
      children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stacks.YStack, _object_spread({
        "data-orientation": orientation,
        ref: composedRef
      }, accordionProps, import_constants.isWeb && {
        onKeyDown: handleKeyDown
      }))
    })
  });
}), ITEM_NAME = "AccordionItem", _createStyledContext3 = (0, import_web2.createStyledContext)(), AccordionItemProvider = _createStyledContext3.Provider, useAccordionItemContext = _createStyledContext3.useStyledContext, AccordionItem = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var __scopeAccordion = props.__scopeAccordion, value = props.value, accordionItemProps = _object_without_properties(props, [
    "__scopeAccordion",
    "value"
  ]), accordionContext = useAccordionContext(__scopeAccordion), valueContext = useAccordionValueContext(__scopeAccordion), triggerId = React.useId(), open = value && valueContext.value.includes(value) || !1, disabled = accordionContext.disabled || props.disabled;
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionItemProvider, {
    scope: __scopeAccordion,
    open,
    disabled,
    triggerId,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_collapsible.Collapsible, _object_spread_props(_object_spread({
      "data-orientation": accordionContext.orientation,
      "data-state": open ? "open" : "closed",
      __scopeCollapsible: __scopeAccordion || ACCORDION_CONTEXT
    }, accordionItemProps), {
      ref: forwardedRef,
      disabled,
      open,
      onOpenChange: function(open2) {
        open2 ? valueContext.onItemOpen(value) : valueContext.onItemClose(value);
      }
    }))
  });
});
AccordionItem.displayName = ITEM_NAME;
var HEADER_NAME = "AccordionHeader", AccordionHeader = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var __scopeAccordion = props.__scopeAccordion, headerProps = _object_without_properties(props, [
    "__scopeAccordion"
  ]), accordionContext = useAccordionContext(__scopeAccordion), itemContext = useAccordionItemContext(__scopeAccordion);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_text.H1, _object_spread_props(_object_spread({
    "data-orientation": accordionContext.orientation,
    "data-state": getState(itemContext.open),
    "data-disabled": itemContext.disabled ? "" : void 0
  }, headerProps), {
    ref: forwardedRef
  }));
});
AccordionHeader.displayName = HEADER_NAME;
var AccordionTriggerFrame = (0, import_web2.styled)(import_collapsible.Collapsible.Trigger, {
  variants: {
    unstyled: {
      false: {
        cursor: "pointer",
        backgroundColor: "$background",
        borderColor: "$borderColor",
        borderWidth: 1,
        padding: "$true",
        hoverStyle: {
          backgroundColor: "$backgroundHover"
        },
        focusStyle: {
          backgroundColor: "$backgroundFocus"
        },
        pressStyle: {
          backgroundColor: "$backgroundPress"
        }
      }
    }
  },
  defaultVariants: {
    unstyled: process.env.TAMAGUI_HEADLESS === "1"
  }
}), AccordionTrigger = AccordionTriggerFrame.styleable(function(props, forwardedRef) {
  var __scopeAccordion = props.__scopeAccordion, triggerProps = _object_without_properties(props, [
    "__scopeAccordion"
  ]), accordionContext = useAccordionContext(__scopeAccordion), itemContext = useAccordionItemContext(__scopeAccordion), collapsibleContext = useAccordionCollapsibleContext(__scopeAccordion);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Collection.ItemSlot, {
    __scopeCollection: __scopeAccordion || ACCORDION_CONTEXT,
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionTriggerFrame, _object_spread_props(_object_spread({
      //   @ts-ignore
      __scopeCollapsible: __scopeAccordion || ACCORDION_CONTEXT,
      "aria-disabled": itemContext.open && !collapsibleContext.collapsible || void 0,
      "data-orientation": accordionContext.orientation,
      id: itemContext.triggerId
    }, triggerProps), {
      ref: forwardedRef
    }))
  });
}), AccordionContentFrame = (0, import_web2.styled)(import_collapsible.Collapsible.Content, {
  variants: {
    unstyled: {
      false: {
        padding: "$true",
        backgroundColor: "$background"
      }
    }
  },
  defaultVariants: {
    unstyled: process.env.TAMAGUI_HEADLESS === "1"
  }
}), AccordionContent = AccordionContentFrame.styleable(function(props, forwardedRef) {
  var __scopeAccordion = props.__scopeAccordion, contentProps = _object_without_properties(props, [
    "__scopeAccordion"
  ]), accordionContext = useAccordionContext(__scopeAccordion), itemContext = useAccordionItemContext(__scopeAccordion);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AccordionContentFrame, _object_spread_props(_object_spread({
    role: "region",
    "aria-labelledby": itemContext.triggerId,
    "data-orientation": accordionContext.orientation,
    // @ts-ignore
    __scopeCollapsible: __scopeAccordion || ACCORDION_CONTEXT
  }, contentProps), {
    ref: forwardedRef
  }));
}), HeightAnimator = import_web.View.styleable(function(props, ref) {
  var itemContext = useAccordionItemContext(), children = props.children, rest = _object_without_properties(props, [
    "children"
  ]), _React_useState = _sliced_to_array(React.useState(0), 2), height = _React_useState[0], setHeight = _React_useState[1];
  React.useEffect(function() {
    itemContext.open || setHeight(0);
  }, [
    itemContext.open
  ]);
  var onLayout = (0, import_web.useEvent)(function(param) {
    var nativeEvent = param.nativeEvent;
    nativeEvent.layout.height && setHeight(nativeEvent.layout.height);
  });
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_web.View, _object_spread_props(_object_spread({
    ref,
    height
  }, rest), {
    children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_web.View, {
      position: "absolute",
      //@ts-ignore
      onLayout,
      children
    })
  }));
});
function getState(open) {
  return open ? "open" : "closed";
}
var Accordion = (0, import_helpers.withStaticProperties)(AccordionComponent, {
  Trigger: AccordionTrigger,
  Header: AccordionHeader,
  Content: AccordionContent,
  Item: AccordionItem,
  HeightAnimator
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Accordion
});
//# sourceMappingURL=Accordion.js.map
