import { jsx as _jsx } from "react/jsx-runtime";
import { useComposedRefs } from "@tamagui/compose-refs";
import { isWeb } from "@tamagui/constants";
import { registerFocusable } from "@tamagui/focusable";
import { composeEventHandlers } from "@tamagui/helpers";
import { useLabelContext } from "@tamagui/label";
import { useControllableState } from "@tamagui/use-controllable-state";
import { useContext, useEffect, useRef, useState } from "react";
import { BubbleInput } from "./BubbleInput";
import { getState } from "./utils";
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
function useRadioGroup(params) {
  var valueProp = params.value, onValueChange = params.onValueChange, defaultValue = params.defaultValue, required = params.required, disabled = params.disabled, name = params.name, native = params.native, accentColor = params.accentColor, orientation = params.orientation, ref = params.ref, _useControllableState = _sliced_to_array(useControllableState({
    prop: valueProp,
    defaultProp: defaultValue,
    onChange: onValueChange
  }), 2), value = _useControllableState[0], setValue = _useControllableState[1];
  return {
    providerValue: {
      value,
      onChange: setValue,
      required,
      disabled,
      name,
      native,
      accentColor
    },
    frameAttrs: {
      role: "radiogroup",
      "aria-orientation": orientation,
      "data-disabled": disabled ? "" : void 0
    },
    rovingFocusGroupAttrs: {
      orientation,
      loop: !0
    }
  };
}
var ARROW_KEYS = [
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight"
], useRadioGroupItem = function(params) {
  var radioGroupContext = params.radioGroupContext, value = params.value, ariaLabelledby = params.labelledBy, itemDisabled = params.disabled, refProp = params.ref, id = params.id, onPress = params.onPress, onKeyDown = params.onKeyDown, onFocus = params.onFocus, _useContext = useContext(radioGroupContext), groupValue = _useContext.value, disabled = _useContext.disabled, required = _useContext.required, onChange = _useContext.onChange, name = _useContext.name, native = _useContext.native, accentColor = _useContext.accentColor, _useState = _sliced_to_array(useState(null), 2), button = _useState[0], setButton = _useState[1], hasConsumerStoppedPropagationRef = useRef(!1), ref = useRef(null), composedRefs = useComposedRefs(refProp, function(node) {
    return setButton(node);
  }, ref), isArrowKeyPressedRef = useRef(!1), isFormControl = isWeb ? button ? !!button.closest("form") : !0 : !1, checked = groupValue === value, labelId = useLabelContext(button), labelledBy = ariaLabelledby || labelId;
  useEffect(function() {
    if (isWeb) {
      var handleKeyDown = function(event) {
        ARROW_KEYS.includes(event.key) && (isArrowKeyPressedRef.current = !0);
      }, handleKeyUp = function() {
        isArrowKeyPressedRef.current = !1;
      };
      return document.addEventListener("keydown", handleKeyDown), document.addEventListener("keyup", handleKeyUp), function() {
        document.removeEventListener("keydown", handleKeyDown), document.removeEventListener("keyup", handleKeyUp);
      };
    }
  }, []), useEffect(function() {
    if (id && !disabled)
      return registerFocusable(id, {
        focusAndSelect: function() {
          onChange == null || onChange(value);
        },
        focus: function() {
        }
      });
  }, [
    id,
    value,
    disabled
  ]);
  var isDisabled = disabled || itemDisabled;
  return {
    providerValue: {
      checked
    },
    checked,
    isFormControl,
    bubbleInput: /* @__PURE__ */ _jsx(BubbleInput, _object_spread({
      isHidden: !native,
      control: button,
      bubbles: !hasConsumerStoppedPropagationRef.current,
      name,
      value,
      checked,
      required,
      disabled: isDisabled
    }, isWeb && native && {
      accentColor,
      id
    })),
    native,
    frameAttrs: _object_spread(_object_spread_props(_object_spread({
      "data-state": getState(checked),
      "data-disabled": isDisabled ? "" : void 0,
      role: "radio",
      "aria-labelledby": labelledBy,
      "aria-checked": checked,
      "aria-required": required,
      disabled: isDisabled,
      ref: composedRefs
    }, isWeb && {
      type: "button",
      value
    }), {
      id,
      onPress: composeEventHandlers(onPress, function(event) {
        checked || onChange == null || onChange(value), isFormControl && (hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(), hasConsumerStoppedPropagationRef.current || event.stopPropagation());
      })
    }), isWeb && {
      onKeyDown: composeEventHandlers(onKeyDown, function(event) {
        event.key === "Enter" && event.preventDefault();
      }),
      onFocus: composeEventHandlers(onFocus, function() {
        if (isArrowKeyPressedRef.current) {
          var _ref_current;
          (_ref_current = ref.current) === null || _ref_current === void 0 || _ref_current.click();
        }
      })
    }),
    rovingFocusGroupAttrs: {
      asChild: "expect-style",
      focusable: !isDisabled,
      active: checked
    }
  };
};
function useRadioGroupItemIndicator(params) {
  var radioGroupItemContext = params.radioGroupItemContext, disabled = params.disabled, rest = _object_without_properties(params, [
    "radioGroupItemContext",
    "disabled"
  ]), checked = useContext(radioGroupItemContext).checked;
  return _object_spread({
    checked,
    "data-state": getState(checked),
    "data-disabled": disabled ? "" : void 0
  }, rest);
}
export {
  useRadioGroup,
  useRadioGroupItem,
  useRadioGroupItemIndicator
};
//# sourceMappingURL=useRadioGroup.js.map
