"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var createSwitch_exports = {};
__export(createSwitch_exports, {
  SwitchContext: () => SwitchContext,
  createSwitch: () => createSwitch
});
module.exports = __toCommonJS(createSwitch_exports);
var import_jsx_runtime = require("react/jsx-runtime"), import_core = require("@tamagui/core"), import_switch_headless = require("@tamagui/switch-headless"), import_use_controllable_state = require("@tamagui/use-controllable-state"), React = __toESM(require("react")), import_react_native = require("react-native"), import_StyledContext = require("./StyledContext"), import_Switch = require("./Switch");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
var SwitchContext = /* @__PURE__ */ React.createContext({
  checked: !1,
  disabled: !1,
  frameWidth: 0
});
function createSwitch(createProps) {
  var disableActiveTheme = createProps.disableActiveTheme, _createProps_Frame = createProps.Frame, Frame = _createProps_Frame === void 0 ? import_Switch.SwitchFrame : _createProps_Frame, _createProps_Thumb = createProps.Thumb, Thumb = _createProps_Thumb === void 0 ? import_Switch.SwitchThumb : _createProps_Thumb;
  process.env.NODE_ENV === "development" && (Frame !== import_Switch.SwitchFrame && Frame.staticConfig.context && Frame.staticConfig.context !== import_StyledContext.SwitchStyledContext || Thumb !== import_Switch.SwitchThumb && Thumb.staticConfig.context && Thumb.staticConfig.context !== import_StyledContext.SwitchStyledContext) && console.warn("Warning: createSwitch() needs to control context to pass checked state from Frame to Thumb, any custom context passed will be overridden."), Frame.staticConfig.context = import_StyledContext.SwitchStyledContext, Thumb.staticConfig.context = import_StyledContext.SwitchStyledContext;
  var SwitchThumbComponent = Thumb.styleable(function(props, forwardedRef) {
    var sizeProp = props.size, unstyledProp = props.unstyled, nativeID = props.nativeID, thumbProps = _object_without_properties(props, [
      "size",
      "unstyled",
      "nativeID"
    ]), context = React.useContext(SwitchContext), checked = context.checked, disabled = context.disabled, frameWidth = context.frameWidth, styledContext = import_StyledContext.SwitchStyledContext.useStyledContext(), unstyledContext = styledContext.unstyled, sizeContext = styledContext.size, _ref, unstyled = process.env.TAMAGUI_HEADLESS === "1" ? !0 : (_ref = unstyledProp ?? unstyledContext) !== null && _ref !== void 0 ? _ref : !1, _ref1, size = (_ref1 = sizeProp ?? sizeContext) !== null && _ref1 !== void 0 ? _ref1 : "$true", initialChecked = React.useRef(checked).current, _React_useState = _sliced_to_array(React.useState(0), 2), thumbWidth = _React_useState[0], setThumbWidth = _React_useState[1], distance = frameWidth - thumbWidth, x = initialChecked ? checked ? 0 : -distance : checked ? distance : 0;
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Thumb, _object_spread(_object_spread_props(_object_spread({
      ref: forwardedRef,
      unstyled
    }, unstyled === !1 && _object_spread({
      size
    }, !disableActiveTheme && {
      theme: checked ? "active" : null
    })), {
      alignSelf: initialChecked ? "flex-end" : "flex-start",
      x,
      // TODO: remove ViewProps cast
      onLayout: (0, import_core.composeEventHandlers)(props.onLayout, function(e) {
        return setThumbWidth(e.nativeEvent.layout.width);
      }),
      // expected variants
      checked,
      disabled
    }), thumbProps));
  }), SwitchComponent = Frame.styleable(function(_props, forwardedRef) {
    var native = _props.native, nativeProps = _props.nativeProps, checkedProp = _props.checked, defaultChecked = _props.defaultChecked, onCheckedChange = _props.onCheckedChange, props = _object_without_properties(_props, [
      "native",
      "nativeProps",
      "checked",
      "defaultChecked",
      "onCheckedChange"
    ]), _useControllableState = _sliced_to_array((0, import_use_controllable_state.useControllableState)({
      prop: checkedProp,
      defaultProp: defaultChecked || !1,
      onChange: onCheckedChange,
      transition: !0
    }), 2), checked = _useControllableState[0], setChecked = _useControllableState[1], styledContext = React.useContext(import_StyledContext.SwitchStyledContext.context), _React_useState = _sliced_to_array(React.useState(0), 2), frameWidth = _React_useState[0], setFrameWidth = _React_useState[1], propsActive = (0, import_core.useProps)(props, {
      noNormalize: !0,
      noExpand: !0,
      resolveValues: "none",
      forComponent: Frame
    }), _styledContext_size, _ref, _styledContext_unstyled, _ref1, _useSwitch = (0, import_switch_headless.useSwitch)(
      // @ts-ignore
      Object.assign({
        size: (_ref = (_styledContext_size = styledContext.size) !== null && _styledContext_size !== void 0 ? _styledContext_size : props.size) !== null && _ref !== void 0 ? _ref : "$true",
        unstyled: (_ref1 = (_styledContext_unstyled = styledContext.unstyled) !== null && _styledContext_unstyled !== void 0 ? _styledContext_unstyled : props.unstyled) !== null && _ref1 !== void 0 ? _ref1 : !1
      }, propsActive),
      [
        checked,
        setChecked
      ],
      forwardedRef
    ), switchProps = _useSwitch.switchProps, bubbleInput = _useSwitch.bubbleInput, switchRef = _useSwitch.switchRef, renderNative = (0, import_core.shouldRenderNativePlatform)(native);
    return renderNative === "android" || renderNative === "ios" ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_native.Switch, _object_spread({
      value: checked,
      onValueChange: setChecked
    }, nativeProps)) : /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(SwitchContext.Provider, {
      value: {
        checked,
        disabled: switchProps.disabled,
        frameWidth
      },
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Frame, _object_spread_props(_object_spread({
          ref: switchRef,
          tag: "button"
        }, import_core.isWeb && {
          type: "button"
        }, switchProps, !disableActiveTheme && {
          theme: checked ? "active" : null,
          themeShallow: !0
        }), {
          // expected variants
          checked,
          disabled: switchProps.disabled,
          children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_core.Stack, {
            alignSelf: "stretch",
            flex: 1,
            onLayout: function(e) {
              setFrameWidth(e.nativeEvent.layout.width);
            },
            children: switchProps.children
          })
        })),
        bubbleInput
      ]
    });
  }, {
    disableTheme: !0
  });
  return (0, import_core.withStaticProperties)(SwitchComponent, {
    Thumb: SwitchThumbComponent
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SwitchContext,
  createSwitch
});
//# sourceMappingURL=createSwitch.js.map
