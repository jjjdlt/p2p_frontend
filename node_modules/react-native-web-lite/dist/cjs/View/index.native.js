"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var View_exports = {};
__export(View_exports, {
  default: () => View_default
});
module.exports = __toCommonJS(View_exports);
var React = __toESM(require("react")), import_react_native_web_internals = require("react-native-web-internals"), import_react_native_web_internals2 = require("react-native-web-internals"), import_createElement = __toESM(require("../createElement/index"));
function _object_without_properties(source, excluded) {
  if (source == null) return {};
  var target = _object_without_properties_loose(source, excluded), key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++)
      key = sourceSymbolKeys[i], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
  }
  return target;
}
function _object_without_properties_loose(source, excluded) {
  if (source == null) return {};
  var target = {}, sourceKeys = Object.keys(source), key, i;
  for (i = 0; i < sourceKeys.length; i++)
    key = sourceKeys[i], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
var pickProps = function(props) {
  return (0, import_react_native_web_internals2.pick)(props, import_react_native_web_internals2.forwardPropsListView);
}, View = /* @__PURE__ */ React.forwardRef(function(props, forwardedRef) {
  var hrefAttrs = props.hrefAttrs, onLayout = props.onLayout, onMoveShouldSetResponder = props.onMoveShouldSetResponder, onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture, onResponderEnd = props.onResponderEnd, onResponderGrant = props.onResponderGrant, onResponderMove = props.onResponderMove, onResponderReject = props.onResponderReject, onResponderRelease = props.onResponderRelease, onResponderStart = props.onResponderStart, onResponderTerminate = props.onResponderTerminate, onResponderTerminationRequest = props.onResponderTerminationRequest, onScrollShouldSetResponder = props.onScrollShouldSetResponder, onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture, onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder, onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture, onStartShouldSetResponder = props.onStartShouldSetResponder, onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture, rest = _object_without_properties(props, [
    "hrefAttrs",
    "onLayout",
    "onMoveShouldSetResponder",
    "onMoveShouldSetResponderCapture",
    "onResponderEnd",
    "onResponderGrant",
    "onResponderMove",
    "onResponderReject",
    "onResponderRelease",
    "onResponderStart",
    "onResponderTerminate",
    "onResponderTerminationRequest",
    "onScrollShouldSetResponder",
    "onScrollShouldSetResponderCapture",
    "onSelectionChangeShouldSetResponder",
    "onSelectionChangeShouldSetResponderCapture",
    "onStartShouldSetResponder",
    "onStartShouldSetResponderCapture"
  ]);
  process.env.NODE_ENV !== "production" && React.Children.toArray(props.children).forEach(function(item) {
    typeof item == "string" && console.error("Unexpected text node: ".concat(item, ". A text node cannot be a child of a <View>."));
  });
  var hasTextAncestor = React.useContext(import_react_native_web_internals.TextAncestorContext), hostRef = React.useRef(null), _useLocaleContext = (0, import_react_native_web_internals2.useLocaleContext)(), contextDirection = _useLocaleContext.direction;
  (0, import_react_native_web_internals2.useElementLayout)(hostRef, onLayout), (0, import_react_native_web_internals2.useResponderEvents)(hostRef, {
    onMoveShouldSetResponder,
    onMoveShouldSetResponderCapture,
    onResponderEnd,
    onResponderGrant,
    onResponderMove,
    onResponderReject,
    onResponderRelease,
    onResponderStart,
    onResponderTerminate,
    onResponderTerminationRequest,
    onScrollShouldSetResponder,
    onScrollShouldSetResponderCapture,
    onSelectionChangeShouldSetResponder,
    onSelectionChangeShouldSetResponderCapture,
    onStartShouldSetResponder,
    onStartShouldSetResponderCapture
  });
  var component = "div", langDirection = props.lang != null ? (0, import_react_native_web_internals2.getLocaleDirection)(props.lang) : null, componentDirection = props.dir || langDirection, writingDirection = componentDirection || contextDirection, supportedProps = pickProps(rest);
  if (supportedProps.dir = componentDirection, supportedProps.style = [
    styles.view$raw,
    hasTextAncestor && styles.inline,
    props.style
  ], props.href != null && (component = "a", hrefAttrs != null)) {
    var download = hrefAttrs.download, rel = hrefAttrs.rel, target = hrefAttrs.target;
    download != null && (supportedProps.download = download), rel != null && (supportedProps.rel = rel), typeof target == "string" && (supportedProps.target = target.charAt(0) !== "_" ? "_" + target : target);
  }
  var platformMethodsRef = (0, import_react_native_web_internals2.usePlatformMethods)(supportedProps), setRef = (0, import_react_native_web_internals2.useMergeRefs)(hostRef, platformMethodsRef, forwardedRef);
  return supportedProps.ref = setRef, (0, import_createElement.default)(component, supportedProps, {
    writingDirection
  });
});
View.displayName = "View";
var styles = import_react_native_web_internals.StyleSheet.create({
  view$raw: {
    alignItems: "stretch",
    boxSizing: "border-box",
    display: "flex",
    flexBasis: "auto",
    flexDirection: "column",
    flexShrink: 0
  },
  inline: {
    display: "inline-flex"
  }
}), View_default = View;
//# sourceMappingURL=index.js.map
