"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var useAnimatedProps_exports = {};
__export(useAnimatedProps_exports, {
  default: () => useAnimatedProps
});
module.exports = __toCommonJS(useAnimatedProps_exports);
var import_createForOfIteratorHelperLoose = __toESM(require("@babel/runtime/helpers/createForOfIteratorHelperLoose")), import_react = require("react"), import_useRefEffect = __toESM(require("../useRefEffect")), import_AnimatedEvent = require("./AnimatedEvent"), import_NativeAnimatedHelper = __toESM(require("./NativeAnimatedHelper")), import_AnimatedProps = __toESM(require("./nodes/AnimatedProps"));
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _instanceof(left, right) {
  return right != null && typeof Symbol < "u" && right[Symbol.hasInstance] ? !!right[Symbol.hasInstance](left) : left instanceof right;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys2 = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys2.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
  }), target;
}
var useLayoutEffect = typeof window > "u" ? import_react.useEffect : import_react.useLayoutEffect;
function useAnimatedProps(props) {
  var _useReducer = (0, import_react.useReducer)(function(count) {
    return count + 1;
  }, 0), scheduleUpdate = _useReducer[1], onUpdateRef = (0, import_react.useRef)(null), node = (0, import_react.useMemo)(function() {
    return new import_AnimatedProps.default(props, function() {
      return onUpdateRef.current == null ? void 0 : onUpdateRef.current();
    });
  }, [
    props
  ]);
  useAnimatedPropsLifecycle(node);
  var refEffect = (0, import_react.useCallback)(function(instance) {
    node.setNativeView(instance), onUpdateRef.current = function() {
      (0, import_react.startTransition)(function() {
        scheduleUpdate();
      });
    };
    var target = getEventTarget(instance), events = [];
    for (var propName in props) {
      var propValue = props[propName];
      _instanceof(propValue, import_AnimatedEvent.AnimatedEvent) && propValue.__isNative && (propValue.__attach(target, propName), events.push([
        propName,
        propValue
      ]));
    }
    return function() {
      onUpdateRef.current = null;
      for (var _iterator = (0, import_createForOfIteratorHelperLoose.default)(events), _step; !(_step = _iterator()).done; ) {
        var _step$value = _step.value, _propName = _step$value[0], _propValue = _step$value[1];
        _propValue.__detach(target, _propName);
      }
    };
  }, [
    props,
    node
  ]), callbackRef = (0, import_useRefEffect.default)(refEffect);
  return [
    reduceAnimatedProps(node),
    callbackRef
  ];
}
function reduceAnimatedProps(node) {
  return _object_spread_props(_object_spread({}, node.__getValue()), {
    collapsable: !1
  });
}
function useAnimatedPropsLifecycle(node) {
  var prevNodeRef = (0, import_react.useRef)(null), isUnmountingRef = (0, import_react.useRef)(!1);
  (0, import_react.useEffect)(function() {
    import_NativeAnimatedHelper.default.API.flushQueue();
  }), useLayoutEffect(function() {
    return isUnmountingRef.current = !1, function() {
      isUnmountingRef.current = !0;
    };
  }, []), useLayoutEffect(function() {
    if (node.__attach(), prevNodeRef.current != null) {
      var prevNode = prevNodeRef.current;
      prevNode.__restoreDefaultValues(), prevNode.__detach(), prevNodeRef.current = null;
    }
    return function() {
      isUnmountingRef.current ? node.__detach() : prevNodeRef.current = node;
    };
  }, [
    node
  ]);
}
function getEventTarget(instance) {
  return typeof instance == "object" && typeof (instance == null ? void 0 : instance.getScrollableNode) == "function" ? (
    // $FlowFixMe[incompatible-use] - Legacy instance assumptions.
    instance.getScrollableNode()
  ) : instance;
}
//# sourceMappingURL=useAnimatedProps.js.map
