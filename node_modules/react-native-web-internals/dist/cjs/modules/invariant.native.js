"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var invariant_exports = {};
__export(invariant_exports, {
  invariant: () => invariant,
  warning: () => warning
});
module.exports = __toCommonJS(invariant_exports);
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_without_holes(arr) {
  if (Array.isArray(arr)) return _array_like_to_array(arr);
}
function _iterable_to_array(iter) {
  if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _non_iterable_spread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _to_consumable_array(arr) {
  return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
function invariant(condition, log) {
  for (var _len = arguments.length, logVars = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++)
    logVars[_key - 2] = arguments[_key];
  if (!condition)
    throw new Error(process.env.NODE_ENV === "development" ? log.split("%s").flatMap(function(chunk, i) {
      return [
        chunk,
        logVars[i]
      ];
    }).join("") : log);
}
function warning(condition, log) {
  for (var _len = arguments.length, logVars = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++)
    logVars[_key - 2] = arguments[_key];
  if (process.env.NODE_ENV === "development")
    try {
      invariant.apply(void 0, [
        condition,
        log
      ].concat(_to_consumable_array(logVars)));
    } catch (err) {
      console.warn(err);
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  invariant,
  warning
});
//# sourceMappingURL=invariant.js.map
