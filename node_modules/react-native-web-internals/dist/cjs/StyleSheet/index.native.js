"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var StyleSheet_exports = {};
__export(StyleSheet_exports, {
  default: () => StyleSheet,
  flatten: () => flatten
});
module.exports = __toCommonJS(StyleSheet_exports);
var import_styleq = require("styleq"), import_transform_localize_style = require("styleq/transform-localize-style.js"), import__ = require("../index"), import_compiler = require("./compiler/index"), import_dom = require("./dom/index"), import_preprocess = require("./preprocess"), import_validate = require("./validate");
function _array_like_to_array(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _array_with_holes(arr) {
  if (Array.isArray(arr)) return arr;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _iterable_to_array_limit(arr, i) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _arr = [], _n = !0, _d = !1, _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i && _arr.length === i)); _n = !0)
        ;
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        !_n && _i.return != null && _i.return();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _non_iterable_rest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function _sliced_to_array(arr, i) {
  return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _unsupported_iterable_to_array(o, minLen) {
  if (o) {
    if (typeof o == "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor && (n = o.constructor.name), n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
  }
}
var staticStyleMap = /* @__PURE__ */ new WeakMap(), sheet = (0, import_dom.createSheet)();
function customStyleq(styles, isRTL) {
  return import_styleq.styleq.factory({
    transform: function(style) {
      var compiledStyle = staticStyleMap.get(style);
      return compiledStyle != null ? (0, import_transform_localize_style.localizeStyle)(compiledStyle, isRTL) : style;
    }
  })(styles);
}
function insertRules(compiledOrderedRules) {
  compiledOrderedRules.forEach(function(param) {
    var _param = _sliced_to_array(param, 2), rules = _param[0], order = _param[1];
    sheet != null && rules.forEach(function(rule) {
      sheet.insert(rule, order);
    });
  });
}
function compileAndInsertAtomic(style) {
  var _atomic = _sliced_to_array((0, import_compiler.atomic)((0, import_preprocess.preprocess)(style)), 2), compiledStyle = _atomic[0], compiledOrderedRules = _atomic[1];
  return insertRules(compiledOrderedRules), compiledStyle;
}
function compileAndInsertReset(style, key) {
  var _classic = _sliced_to_array((0, import_compiler.classic)(style, key), 2), compiledStyle = _classic[0], compiledOrderedRules = _classic[1];
  return insertRules(compiledOrderedRules), compiledStyle;
}
var absoluteFillObject = {
  position: "absolute",
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
}, absoluteFill = create({
  x: _object_spread({}, absoluteFillObject)
}).x;
function create(styles) {
  return Object.keys(styles).forEach(function(key) {
    var styleObj = styles[key];
    if (styleObj != null && styleObj.$$css !== !0) {
      var compiledStyles;
      key.indexOf("$raw") > -1 ? compiledStyles = compileAndInsertReset(styleObj, key.split("$raw")[0]) : (process.env.NODE_ENV !== "production" && ((0, import_validate.validate)(styleObj), styles[key] = Object.freeze(styleObj)), compiledStyles = compileAndInsertAtomic(styleObj)), staticStyleMap.set(styleObj, compiledStyles);
    }
  }), styles;
}
function compose(style1, style2) {
  if (process.env.NODE_ENV !== "production") {
    var len = arguments.length;
    if (len > 2) {
      var readableStyles = Array.prototype.slice.call(arguments).map(function(a) {
        return flatten(a);
      });
      throw new Error("StyleSheet.compose() only accepts 2 arguments, received ".concat(len, ": ").concat(JSON.stringify(readableStyles)));
    }
  }
  return style1 && style2 ? [
    style1,
    style2
  ] : style1 || style2;
}
function flatten() {
  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++)
    styles[_key] = arguments[_key];
  for (var flatArray = styles.flat(1 / 0), result = {}, i = 0; i < flatArray.length; i++) {
    var style = flatArray[i];
    style != null && typeof style == "object" && Object.assign(result, style);
  }
  return result;
}
function getSheet() {
  return {
    id: sheet.id,
    textContent: sheet.getTextContent()
  };
}
function StyleSheet(styles, options) {
  var isRTL = options != null && options.writingDirection === "rtl", styleProps = customStyleq(styles, isRTL);
  return Array.isArray(styleProps) && styleProps[1] != null && (styleProps[1] = (0, import_compiler.inline)((0, import_preprocess.preprocess)(styleProps[1]), isRTL)), styleProps;
}
StyleSheet.absoluteFill = absoluteFill;
StyleSheet.absoluteFillObject = absoluteFillObject;
StyleSheet.create = create;
StyleSheet.compose = compose;
StyleSheet.flatten = flatten;
StyleSheet.getSheet = getSheet;
StyleSheet.hairlineWidth = 1;
setTimeout(function() {
  import__.canUseDOM && window.__REACT_DEVTOOLS_GLOBAL_HOOK__ && (window.__REACT_DEVTOOLS_GLOBAL_HOOK__.resolveRNStyle = StyleSheet.flatten);
}, 100);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  flatten
});
//# sourceMappingURL=index.js.map
