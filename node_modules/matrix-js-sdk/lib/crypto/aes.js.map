{"version":3,"file":"aes.js","names":["decodeBase64","encodeBase64","subtleCrypto","crypto","TextEncoder","zeroSalt","Uint8Array","encryptAES","_x","_x2","_x3","_x4","_encryptAES","apply","arguments","_asyncToGenerator","data","key","name","ivStr","iv","getRandomValues","aesKey","hmacKey","deriveKeys","encodedData","encode","ciphertext","encrypt","counter","length","hmac","sign","mac","decryptAES","_x5","_x6","_x7","_decryptAES","verify","Error","concat","plaintext","decrypt","TextDecoder","decode","_x8","_x9","_deriveKeys","hkdfkey","importKey","keybits","deriveBits","salt","info","hash","slice","aesProm","hmacProm","Promise","all","ZERO_STR","calculateKeyCheck"],"sources":["../../src/crypto/aes.ts"],"sourcesContent":["/*\nCopyright 2020 - 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { decodeBase64, encodeBase64 } from \"../base64\";\nimport { subtleCrypto, crypto, TextEncoder } from \"./crypto\";\n\n// salt for HKDF, with 8 bytes of zeros\nconst zeroSalt = new Uint8Array(8);\n\nexport interface IEncryptedPayload {\n    [key: string]: any; // extensible\n    /** the initialization vector in base64 */\n    iv: string;\n    /** the ciphertext in base64 */\n    ciphertext: string;\n    /** the HMAC in base64 */\n    mac: string;\n}\n\n/**\n * encrypt a string\n *\n * @param data - the plaintext to encrypt\n * @param key - the encryption key to use\n * @param name - the name of the secret\n * @param ivStr - the initialization vector to use\n */\nexport async function encryptAES(\n    data: string,\n    key: Uint8Array,\n    name: string,\n    ivStr?: string,\n): Promise<IEncryptedPayload> {\n    let iv: Uint8Array;\n    if (ivStr) {\n        iv = decodeBase64(ivStr);\n    } else {\n        iv = new Uint8Array(16);\n        crypto.getRandomValues(iv);\n\n        // clear bit 63 of the IV to stop us hitting the 64-bit counter boundary\n        // (which would mean we wouldn't be able to decrypt on Android). The loss\n        // of a single bit of iv is a price we have to pay.\n        iv[8] &= 0x7f;\n    }\n\n    const [aesKey, hmacKey] = await deriveKeys(key, name);\n    const encodedData = new TextEncoder().encode(data);\n\n    const ciphertext = await subtleCrypto.encrypt(\n        {\n            name: \"AES-CTR\",\n            counter: iv,\n            length: 64,\n        },\n        aesKey,\n        encodedData,\n    );\n\n    const hmac = await subtleCrypto.sign({ name: \"HMAC\" }, hmacKey, ciphertext);\n\n    return {\n        iv: encodeBase64(iv),\n        ciphertext: encodeBase64(ciphertext),\n        mac: encodeBase64(hmac),\n    };\n}\n\n/**\n * decrypt a string\n *\n * @param data - the encrypted data\n * @param key - the encryption key to use\n * @param name - the name of the secret\n */\nexport async function decryptAES(data: IEncryptedPayload, key: Uint8Array, name: string): Promise<string> {\n    const [aesKey, hmacKey] = await deriveKeys(key, name);\n\n    const ciphertext = decodeBase64(data.ciphertext);\n\n    if (!(await subtleCrypto.verify({ name: \"HMAC\" }, hmacKey, decodeBase64(data.mac), ciphertext))) {\n        throw new Error(`Error decrypting secret ${name}: bad MAC`);\n    }\n\n    const plaintext = await subtleCrypto.decrypt(\n        {\n            name: \"AES-CTR\",\n            counter: decodeBase64(data.iv),\n            length: 64,\n        },\n        aesKey,\n        ciphertext,\n    );\n\n    return new TextDecoder().decode(new Uint8Array(plaintext));\n}\n\nasync function deriveKeys(key: Uint8Array, name: string): Promise<[CryptoKey, CryptoKey]> {\n    const hkdfkey = await subtleCrypto.importKey(\"raw\", key, { name: \"HKDF\" }, false, [\"deriveBits\"]);\n    const keybits = await subtleCrypto.deriveBits(\n        {\n            name: \"HKDF\",\n            salt: zeroSalt,\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/879\n            info: new TextEncoder().encode(name),\n            hash: \"SHA-256\",\n        },\n        hkdfkey,\n        512,\n    );\n\n    const aesKey = keybits.slice(0, 32);\n    const hmacKey = keybits.slice(32);\n\n    const aesProm = subtleCrypto.importKey(\"raw\", aesKey, { name: \"AES-CTR\" }, false, [\"encrypt\", \"decrypt\"]);\n\n    const hmacProm = subtleCrypto.importKey(\n        \"raw\",\n        hmacKey,\n        {\n            name: \"HMAC\",\n            hash: { name: \"SHA-256\" },\n        },\n        false,\n        [\"sign\", \"verify\"],\n    );\n\n    return Promise.all([aesProm, hmacProm]);\n}\n\n// string of zeroes, for calculating the key check\nconst ZERO_STR = \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/** Calculate the MAC for checking the key.\n *\n * @param key - the key to use\n * @param iv - The initialization vector as a base64-encoded string.\n *     If omitted, a random initialization vector will be created.\n * @returns An object that contains, `mac` and `iv` properties.\n */\nexport function calculateKeyCheck(key: Uint8Array, iv?: string): Promise<IEncryptedPayload> {\n    return encryptAES(ZERO_STR, key, \"\", iv);\n}\n"],"mappings":"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","ignoreList":[]}